/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package event_management_system_noori;

/**
 *
 * @author noori
 */
import com.mysql.cj.xdevapi.Statement;
import event_management_system_noori.DatabaseConnection;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import javax.swing.JOptionPane;
public class add extends javax.swing.JFrame {

    /**
     * Creates new form add
     */
    public add() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        eventCategoryField = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        l_field = new javax.swing.JTextArea();
        add_button = new javax.swing.JButton();
        Back_to_adminbutton = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        id_field = new javax.swing.JTextField();
        c_field = new javax.swing.JTextField();
        m_field = new javax.swing.JTextField();
        t_field = new javax.swing.JTextField();
        d_field = new javax.swing.JTextField();
        ca_field = new javax.swing.JTextField();
        locationField = new javax.swing.JLabel();
        event_id = new javax.swing.JLabel();
        contactNumberField = new javax.swing.JLabel();
        managerNameField = new javax.swing.JLabel();
        timingField = new javax.swing.JLabel();
        daysField = new javax.swing.JLabel();
        eventCapacityField = new javax.swing.JLabel();
        locationfield = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(102, 0, 102));
        jLabel3.setText("Event Management System:");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 0, 102));
        jLabel1.setText("Add Event");

        jLabel9.setText("* Please fill all the required details. Donot left any block unfilled. *");

        jLabel4.setText("Event category");

        eventCategoryField.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Birthday", "Nikkah", "Engagement", "Mehndi", "Barat", "Walima", "Other" }));
        eventCategoryField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eventCategoryFieldActionPerformed(evt);
            }
        });

        jLabel7.setText("Manager name ");

        jLabel2.setText("Contact number");

        jLabel5.setText("Timing");

        jLabel6.setText("Week Days");

        jLabel8.setText("Event capacity");

        jLabel10.setText("Complete Location: ");

        l_field.setColumns(20);
        l_field.setRows(5);
        jScrollPane1.setViewportView(l_field);

        add_button.setBackground(new java.awt.Color(204, 204, 255));
        add_button.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        add_button.setForeground(new java.awt.Color(102, 0, 102));
        add_button.setText("Add");
        add_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_buttonActionPerformed(evt);
            }
        });

        Back_to_adminbutton.setBackground(new java.awt.Color(255, 204, 255));
        Back_to_adminbutton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Back_to_adminbutton.setText("Back");
        Back_to_adminbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Back_to_adminbuttonActionPerformed(evt);
            }
        });

        jLabel11.setText("Event Id");

        id_field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                id_fieldActionPerformed(evt);
            }
        });

        ca_field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ca_fieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(locationField, javax.swing.GroupLayout.PREFERRED_SIZE, 466, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(locationfield, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel3)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(timingField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(t_field, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(eventCategoryField, javax.swing.GroupLayout.Alignment.LEADING, 0, 157, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(117, 117, 117)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(96, 96, 96)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(event_id, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE)
                                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(daysField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(id_field, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(d_field, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(119, 119, 119)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(eventCapacityField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(contactNumberField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(c_field, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)
                            .addComponent(ca_field))))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(Back_to_adminbutton)
                                .addGap(64, 64, 64))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(add_button, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(102, 102, 102))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(91, 91, 91)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(managerNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(m_field, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(176, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(Back_to_adminbutton))
                        .addGap(24, 24, 24)
                        .addComponent(jLabel9))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel11))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(eventCategoryField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(id_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(event_id))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(12, 12, 12)
                                        .addComponent(jLabel2))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel7)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(c_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(m_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(contactNumberField)))
                        .addGap(39, 39, 39)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(t_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(d_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ca_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(timingField)
                                    .addComponent(daysField)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(eventCapacityField, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(68, 68, 68)
                        .addComponent(jLabel10))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addComponent(managerNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(add_button)
                        .addGap(22, 22, 22)))
                .addComponent(locationField)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(locationfield)
                .addContainerGap(39, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>                        

    private void eventCategoryFieldActionPerformed(java.awt.event.ActionEvent evt) {                                                   
        // TODO add your handling code here:
    }                                                  

    private void add_buttonActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
//        this is 2nd code adding_event3 table:
// Clear input fields
event_id.setText(""); 
eventCategoryField.setSelectedItem(""); // Clears the selected item
managerNameField.setText("");
contactNumberField.setText("");
timingField.setText("");
daysField.setText("");
eventCapacityField.setText("");
locationfield.setText("");

// Input Validation: Ensure all fields are filled and valid
boolean hasError = false;

// Retrieve input values from text fields
String eventIdStr = id_field.getText().trim();
String eventCategory = eventCategoryField.getSelectedItem().toString().trim();
String managerName = m_field.getText().trim();
String contactNumber = c_field.getText().trim();
String timing = t_field.getText().trim();
String days = d_field.getText().trim();
String location = l_field.getText().trim();

int eventId = 0; // Initialize event_id
int eventCapacity = 0;

// Validate Event ID
try {
    eventId = Integer.parseInt(eventIdStr);
    if (eventId <= 0) {
        event_id.setText("Event ID must be greater than 0.");
        event_id.setForeground(Color.RED);
        hasError = true;
    }
} catch (NumberFormatException ex) {
    event_id.setText("Event ID must be a valid number.");
    event_id.setForeground(Color.RED);
    hasError = true;
}

// Validate Event Capacity
try {
    eventCapacity = Integer.parseInt(ca_field.getText().trim());
    if (eventCapacity <= 0) {
        ca_field.setText("Event capacity must be greater than 0.");
        ca_field.setForeground(Color.RED);
        hasError = true;
    }
} catch (NumberFormatException ex) {
    ca_field.setText("Event capacity must be a valid number.");
    ca_field.setForeground(Color.RED);
    hasError = true;
}

// Validate Event Category
if (eventCategory.isEmpty()) {
    eventCategoryField.setSelectedItem("Event category is required!");
    hasError = true;
}

// Validate Manager Name
if (managerName.isEmpty()) {
    m_field.setText("Manager name is required!");
    m_field.setForeground(Color.RED);
    hasError = true;
}

// Validate Contact Number
if (contactNumber.isEmpty()) {
    c_field.setText("Contact number is required!");
    c_field.setForeground(Color.RED);
    hasError = true;
} else if (!contactNumber.matches("^\\d{10,15}$")) {
    c_field.setText("Invalid contact number. Only 10-15 digits allowed.");
    c_field.setForeground(Color.RED);
    hasError = true;
}

// Validate Timing
if (timing.isEmpty()) {
    t_field.setText("Timing is required!");
    t_field.setForeground(Color.RED);
    hasError = true;
}

// Validate Days
if (days.isEmpty()) {
    d_field.setText("Days are required!");
    d_field.setForeground(Color.RED);
    hasError = true;
}

// Validate Location
if (location.isEmpty()) {
    l_field.setText("Location is required!");
    l_field.setForeground(Color.RED);
    hasError = true;
}

// Stop execution if any validation fails
if (hasError) {
    return;
}

// SQL Query to insert data into the adding_events3 table
String sql = "INSERT INTO adding_events3 (event_id, event_category, manager_name, contact_number, timing, days, event_capacity, location) " +
             "VALUES (?, ?, ?, ?, ?, ?, ?, ?)";

try (
    Connection con = DatabaseConnection.getInstance().getConnection();
    PreparedStatement pstmt = con.prepareStatement(sql)) {

    // Set input values into the query placeholders
    pstmt.setInt(1, eventId);
    pstmt.setString(2, eventCategory);
    pstmt.setString(3, managerName);
    pstmt.setString(4, contactNumber);
    pstmt.setString(5, timing);
    pstmt.setString(6, days);
    pstmt.setInt(7, eventCapacity);
    pstmt.setString(8, location);

    // Execute the query
    int rowsInserted = pstmt.executeUpdate();
    if (rowsInserted > 0) {
        JOptionPane.showMessageDialog(this, "Event added successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);

        // Clear input fields
        event_id.setText(""); 
        eventCategoryField.setSelectedItem("");
        m_field.setText("");
        c_field.setText("");
        t_field.setText("");
        d_field.setText("");
        ca_field.setText("");
        l_field.setText("");
    } else {
        JOptionPane.showMessageDialog(this, "Failed to add event. Try again.", "Error", JOptionPane.ERROR_MESSAGE);
    }

} catch (SQLException ex) {
    ex.printStackTrace();
    JOptionPane.showMessageDialog(this, "Database Error: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
}




//this is 1st code for adding_event2 table:
//event_id.setText("");
//eventCategoryField.setSelectedItem(""); // Clears the selected item
//managerNameField.setText("");
//contactNumberField.setText("");
//timingField.setText("");
//daysField.setText("");
//eventCapacityField.setText("");
//locationfield.setText("");
//
//// Input Validation: Ensure all fields are filled and valid
//boolean hasError = false;
//
//// Retrieve input values from text fields
//String eventIdStr = id_field.getText().trim();
//String eventCategory = eventCategoryField.getSelectedItem().toString().trim();
//String managerName = m_field.getText().trim();
//String contactNumber = c_field.getText().trim();
//String timing = t_field.getText().trim();
//String days = d_field.getText().trim();
//String location = l_field.getText().trim();
//
//int eventId = 0; // Initialize event_id
//int eventCapacity = 0;
//try {
//    eventCapacity = Integer.parseInt(ca_field.getText().trim());
//    if (eventCapacity <= 0) {
//        // Handle validation error if capacity is not positive
//        ca_field.setText("Event capacity must be greater than 0.");
//        ca_field.setForeground(Color.RED);
//    }
//} catch (NumberFormatException ex) {
//    // Handle case where input is not a valid number
//    ca_field.setText("Event capacity must be a valid number.");
//    ca_field.setForeground(Color.RED);
//}
//// Validate Event ID
//try {
//    eventId = Integer.parseInt(eventIdStr);
//    if (eventId <= 0) {
//        event_id.setText("Event ID must be greater than 0.");
//        event_id.setForeground(Color.RED);
//        hasError = true;
//    }
//} catch (NumberFormatException ex) {
//    event_id.setText("Event ID must be a valid number.");
//    event_id.setForeground(Color.RED);
//    hasError = true;
//}
//
//// Validate Event Category
//if (eventCategory.isEmpty()) {
//    eventCategoryField.setSelectedItem("Event category is required!");
////    eventCategoryField.setText("Event category is required!");
//    eventCategoryField.setForeground(Color.RED);
//    hasError = true;
//}
//
//// Validate Manager Name
//if (managerName.isEmpty()) {
//    managerNameField.setText("Manager name is required!");
//    managerNameField.setForeground(Color.RED);
//    hasError = true;
//}
//
//// Validate Contact Number
//if (contactNumber.isEmpty()) {
//    contactNumberField.setText("Contact number is required!");
//    contactNumberField.setForeground(Color.RED);
//    hasError = true;
//} else if (!contactNumber.matches("^\\d{10,15}$")) {
//    contactNumberField.setText("Invalid contact number. Only 10-15 digits allowed.");
//    contactNumberField.setForeground(Color.RED);
//    hasError = true;
//}
//
//// Validate Timing
//if (timing.isEmpty()) {
//    timingField.setText("Timing is required!");
//    timingField.setForeground(Color.RED);
//    hasError = true;
//}
//
//// Validate Days
//if (days.isEmpty()) {
//    daysField.setText("Days are required!");
//    daysField.setForeground(Color.RED);
//    hasError = true;
//}
//
//
//if (location.isEmpty()) {
//    locationfield.setText("Location is required!");
//    locationfield.setForeground(Color.RED);
//    hasError = true;
//}
//
//// Stop execution if any validation fails
//if (hasError) {
//    return;
//}
//
//// SQL Query to insert data into the adding_events2 table
//String sql = "INSERT INTO adding_events2 (event_id, event_category, manager_name, contact_number, timing, days, event_capacity, location) " +
//             "VALUES (?, ?, ?, ?, ?, ?, ?, ?)";
//
//try (
//    Connection con = DatabaseConnection.getInstance().getConnection();
//    PreparedStatement pstmt = con.prepareStatement(sql)) {
//
//    // Set input values into the query placeholders
//    pstmt.setInt(1, eventId);
//    pstmt.setString(2, eventCategory);
//    pstmt.setString(3, managerName);
//    pstmt.setString(4, contactNumber);
//    pstmt.setString(5, timing);
//    pstmt.setString(6, days);
//    pstmt.setInt(7, eventCapacity);
//    pstmt.setString(8, location);
//
//    // Execute the query
//    int rowsInserted = pstmt.executeUpdate();
//    if (rowsInserted > 0) {
//        JOptionPane.showMessageDialog(this, "Event added successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
//
//        // Clear input fields
//        event_id.setText("");
//        eventCategoryField.setSelectedItem("");
//        managerNameField.setText("");
//        contactNumberField.setText("");
//        timingField.setText("");
//        daysField.setText("");
//        eventCapacityField.setText("");
//        l_field.setText("");
//    } else {
//        JOptionPane.showMessageDialog(this, "Failed to add event. Try again.", "Error", JOptionPane.ERROR_MESSAGE);
//    }
//
//} catch (SQLException ex) {
//    ex.printStackTrace();
//    JOptionPane.showMessageDialog(this, "Database Error: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
//}
    }                                          

    private void Back_to_adminbuttonActionPerformed(java.awt.event.ActionEvent evt) {                                                    
        // TODO add your handling code here:
        Admin_dashboard ad2=new Admin_dashboard();
        ad2.setVisible(true);
        ad2.pack();
        ad2.setLocationRelativeTo(null);
        this.dispose();
    }                                                   

    private void id_fieldActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
    }                                        

    private void ca_fieldActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
    }                                        

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(add.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(add.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(add.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(add.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new add().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton Back_to_adminbutton;
    private javax.swing.JButton add_button;
    private javax.swing.JTextField c_field;
    private javax.swing.JTextField ca_field;
    private javax.swing.JLabel contactNumberField;
    private javax.swing.JTextField d_field;
    private javax.swing.JLabel daysField;
    private javax.swing.JLabel eventCapacityField;
    private javax.swing.JComboBox<String> eventCategoryField;
    private javax.swing.JLabel event_id;
    private javax.swing.JTextField id_field;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea l_field;
    private javax.swing.JLabel locationField;
    private javax.swing.JLabel locationfield;
    private javax.swing.JTextField m_field;
    private javax.swing.JLabel managerNameField;
    private javax.swing.JTextField t_field;
    private javax.swing.JLabel timingField;
    // End of variables declaration                   
}
