
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package event_management_system_noori;

import event_management_system_noori.DatabaseConnection;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
 import java.text.SimpleDateFormat;
import java.text.ParseException;


/**
 *
 * @author noori
 */
public class register_event extends javax.swing.JFrame {

    /**
     * Creates new form register_event
     */
    public register_event() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        search_id_field = new javax.swing.JTextField();
        customer_name = new javax.swing.JTextField();
        contact_number = new javax.swing.JTextField();
        num_people = new javax.swing.JTextField();
        event_date = new javax.swing.JTextField();
        event_timing = new javax.swing.JTextField();
        register_button = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        Back_tocustomerbutton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        adding_events3 = new javax.swing.JTable();
        search_button = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(102, 0, 102));
        jLabel3.setText("Event Management System:");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 0, 102));
        jLabel1.setText("Register Event:");

        jLabel2.setText("Enter the type of event you are looking for. Then click on search button to see results.");

        jLabel4.setText("Date:");

        jLabel5.setText("Timing:");

        jLabel6.setText("Number of people:");

        jLabel7.setText("Full name:");

        jLabel8.setText("Contact number:");

        register_button.setBackground(new java.awt.Color(204, 204, 255));
        register_button.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        register_button.setForeground(new java.awt.Color(102, 0, 102));
        register_button.setText("Register");
        register_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                register_buttonActionPerformed(evt);
            }
        });

        jLabel10.setText("* Please fill all the required details to register to the selected event. Donot left any block unfilled. ");

        Back_tocustomerbutton.setBackground(new java.awt.Color(255, 204, 255));
        Back_tocustomerbutton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Back_tocustomerbutton.setText("Back");
        Back_tocustomerbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Back_tocustomerbuttonActionPerformed(evt);
            }
        });

        adding_events3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "event_id", "event_category", "manager_name", "contact_number", "timing", "days", "event_capacity", "location"
            }
        ));
        jScrollPane1.setViewportView(adding_events3);

        search_button.setBackground(new java.awt.Color(204, 204, 255));
        search_button.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        search_button.setForeground(new java.awt.Color(102, 0, 102));
        search_button.setText("Search ");
        search_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search_buttonActionPerformed(evt);
            }
        });

        jLabel11.setText("You can type the event category by using the words from this list: ");

        jList1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jList1.setForeground(new java.awt.Color(102, 0, 102));
        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Birthday", "Mehndi", "Barat", "Engagement", "Walima", "Nikkah", "Other", " ", " " };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(jList1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(32, 32, 32)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Back_tocustomerbutton))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(customer_name, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(202, 202, 202)
                                                .addComponent(register_button, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(35, 35, 35)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(contact_number, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(67, 67, 67)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)
                                                    .addComponent(num_people))))
                                        .addGap(63, 63, 63)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(event_date, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(41, 41, 41)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(event_timing, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 534, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1114, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 431, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(175, 175, 175)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(search_button)
                                        .addGap(18, 18, 18)
                                        .addComponent(search_id_field, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(0, 9, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Back_tocustomerbutton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(search_button)
                            .addComponent(search_id_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel6)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(customer_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(contact_number, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(num_people, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(event_date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(event_timing, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(66, 66, 66)
                .addComponent(register_button, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>                        

    private void Back_tocustomerbuttonActionPerformed(java.awt.event.ActionEvent evt) {                                                      
        // TODO add your handling code here:
      
                Customer c2=new Customer();
        c2.setVisible(true);
        c2.pack();
        c2.setLocationRelativeTo(null);
        this.dispose();
    }                                                     

    private void search_buttonActionPerformed(java.awt.event.ActionEvent evt) {                                              
        // TODO add your handling code here:
        try {
    // Get the Event Category from the search field
    String eventCategory = search_id_field.getText().trim();

    // Check if the search field is empty
    if (eventCategory.isEmpty()) {
        JOptionPane.showMessageDialog(null, "Please enter an Event Category to search.");
        return;
    }

    // Establish a database connection
    Connection con = DatabaseConnection.getInstance().getConnection();

    // Prepare the SQL query
    String query = "SELECT * FROM adding_events3 WHERE event_category = ?";
    PreparedStatement pstmt = con.prepareStatement(query);
    pstmt.setString(1, eventCategory);

    // Execute the query
    ResultSet rs = pstmt.executeQuery();

    // Access the table model of the JTable
    DefaultTableModel tableModel = (DefaultTableModel) adding_events3.getModel();
    tableModel.setRowCount(0); // Clear the table before adding new data

    // Check if the result set contains any data
    boolean hasData = false; // Flag to check if there is any data
    while (rs.next()) {
        hasData = true;
        // Add each event's details to the JTable
        Object[] row = {
            rs.getString("event_category"),
            rs.getString("event_id"),
            rs.getString("contact_number"),
            rs.getString("manager_name"),
            rs.getString("timing"),
            rs.getString("days"),        // Assuming "days" is a text column
            rs.getInt("event_capacity"), // Assuming "event_capacity" is an integer column
            rs.getString("location")
        };
        tableModel.addRow(row);
    }

    // If no data is found, show a message
    if (!hasData) {
        JOptionPane.showMessageDialog(null, "No events found with the given Event Category.");
    }

    // Close the connection
    con.close();
} catch (SQLException ex) {
    // Print the SQL exception for debugging
    ex.printStackTrace();
    JOptionPane.showMessageDialog(null, "Database error: " + ex.getMessage());
} catch (Exception ex) {
    // Print other exceptions for debugging
    ex.printStackTrace();
    JOptionPane.showMessageDialog(null, "Unexpected error: " + ex.getMessage());
}
    }                                             

    private void register_buttonActionPerformed(java.awt.event.ActionEvent evt) {                                                
        // TODO add your handling code here:

                                               
    try {
        // Get the selected row from the JTable
        int selectedRow = adding_events3.getSelectedRow();

        // Check if a row is selected
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(null, "Please select an event to register.");
            return;
        }

        // Retrieve event details from the selected row
        String eventId = (String) adding_events3.getValueAt(selectedRow, 1); // Assuming column 1 is event_id
        String eventCategory = (String) adding_events3.getValueAt(selectedRow, 0); // Assuming column 0 is event_category
        String managerName = (String) adding_events3.getValueAt(selectedRow, 3); // Assuming column 3 is manager_name
        String eventTiming = (String) adding_events3.getValueAt(selectedRow, 4); // Assuming column 4 is timing

        // Validate that event details are not null
        if (eventId == null || eventCategory == null || managerName == null || eventTiming == null) {
            JOptionPane.showMessageDialog(null, "Selected event data is incomplete.");
            return;
        }

        // Retrieve user input from form fields
        String customerName = customer_name.getText().trim();
        String contactNumber = contact_number.getText().trim();
        String eventDate = event_date.getText().trim();
        String numPeopleStr = num_people.getText().trim();
        String customerBookingTime = event_timing.getText().trim(); // Assuming there's a text field for booking time

        // Validate user inputs
        if (customerName.isEmpty() || contactNumber.isEmpty() || eventDate.isEmpty() || numPeopleStr.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please fill in all the fields.");
            return;
        }

        int numPeople;
        try {
            numPeople = Integer.parseInt(numPeopleStr); // Convert number of people to integer
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, "Invalid number of people. Please enter a valid integer.");
            return;
        }

        // Check if the eventDate is in the correct format (yyyy-MM-dd)
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        sdf.setLenient(false); // Disallow dates like 2021-02-30

        java.sql.Date sqlDate = null;
        try {
            java.util.Date utilDate = sdf.parse(eventDate);
            sqlDate = new java.sql.Date(utilDate.getTime());
        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(null, "Invalid date format. Please use yyyy-MM-dd.");
            return;
        }

        // If customer didn't provide a specific time, use the event's timing from the JTable
        if (customerBookingTime.isEmpty()) {
            customerBookingTime = eventTiming;
        }

        // Establish a database connection
        Connection con = DatabaseConnection.getInstance().getConnection();

        // Prepare the SQL insert query
        String query = "INSERT INTO registercustomer (event_id, event_category, manager_name, contact_number, customer_name, num_people, event_date, event_timing) "
                     + "VALUES (?, ?, ?, ?, ?, ?, ?, ?)";
        PreparedStatement pstmt = con.prepareStatement(query);

        // Set parameters for the query
        pstmt.setInt(1, Integer.parseInt(eventId)); // Convert event_id to integer
        pstmt.setString(2, eventCategory);
        pstmt.setString(3, managerName);
        pstmt.setString(4, contactNumber);
        pstmt.setString(5, customerName);
        pstmt.setInt(6, numPeople);
        pstmt.setDate(7, sqlDate); // Use the parsed java.sql.Date
        pstmt.setString(8, customerBookingTime); // Use customer's booking time

        // Execute the query
        int rowsInserted = pstmt.executeUpdate();

        // Display success message
        if (rowsInserted > 0) {
            JOptionPane.showMessageDialog(null, "Registration successful!");
        }

        // Close the connection
        con.close();
    } catch (SQLException ex) {
        // Print the SQL exception for debugging
        ex.printStackTrace();
        JOptionPane.showMessageDialog(null, "Database error: " + ex.getMessage());
    } catch (Exception ex) {
        // Print other exceptions for debugging
        ex.printStackTrace();
        JOptionPane.showMessageDialog(null, "Unexpected error: " + ex.getMessage());
    
}


    }                                               

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(register_event.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(register_event.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(register_event.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(register_event.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new register_event().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton Back_tocustomerbutton;
    private javax.swing.JTable adding_events3;
    private javax.swing.JTextField contact_number;
    private javax.swing.JTextField customer_name;
    private javax.swing.JTextField event_date;
    private javax.swing.JTextField event_timing;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JList<String> jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField num_people;
    private javax.swing.JButton register_button;
    private javax.swing.JButton search_button;
    private javax.swing.JTextField search_id_field;
    // End of variables declaration                   
}
